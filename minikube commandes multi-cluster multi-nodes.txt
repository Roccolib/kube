#changer le namespace par defaut:
kubectl config set-context –current –namespace=K21
#separer un fichier .tar en plusieurs parties
split -b 10M home.tar.bz2 "home.tar.bz2.part"
#copy from ubuntu to Windows
scp jewel@176.35.96.32:/usr/local/forme/logs.zip 'D:/forme'
#ajout ric comme user dans docker:
sudo usermod -aG docker ric
#avant minikube start, donner les droits de création des ces dossiers
sudo chown -R $USER $HOME/.minikube; chmod -R u+wrx $HOME/.minikube; chmod -R u+wrx $HOME/.kube
#minikube, docker driver by default:
minikube config set driver docker
#start minikube once with docker driver:
minikube start --driver=docker
minikube start --cni=flannel --nodes 3 -p nodea
#création raccourci kubectl devient k:
alias k=kubectl
# demarer minikube avec la config création multi nodes:
minikube start --nodes 3 -p node --network-plugin=cni --cni=bridge

minikube start --nodes 3 -p node --network-plugin=cni --cni=calico --extra-config=kubeadm.pod-network-cidr=192.168.0.0/16
# lister tous les contexts presents sur la machine (avec ou sans minikube) :
minikube profile list
#lister tous les contexts et signalement de l'actif:
kubectl config get-contexts
#Changer de context :
kubectl config use-context nodea
#effacer un profile minikube:
minikube delete -p nodekubectl
#lister tous les pods présents sur le node actif du cluster en-cours:
kubectl get pods -A
#si besoin ajouter l'image manuellement chez minikube:
minikube image load orchestrepy:150322
#lister tous les nodes du cluster en-cours avec details:
kubectl get nodes -o wide
#acceder a un autre node du cluster encours :
minikube ssh -p minikube --node=minikube-m02
# lister tous les endpoints d'un namespace:
k get endpoints
#lister contenu d'un noeud d'un certain context:
minikube ssh -p node --node=node-m02 ls
#executer commande minikube vers autre node:

#tarrer un fichier sous linux:
tar -cvf baseapis.tar
#detarrer un fichier sous linux:
tar -xvf baseapis.tar

#copy from host to node via ssh:
scp admin.conf 192.168.67.3:/etc/kubernetes/admin.conf
scp /etc/kubernetes/admin.conf 192.168.67.4:/etc/kubernetes/admin.conf
#copy from external node to host:
scp 82.165.169.240:/home/ric/recu/orchestrepy.tar /home/ric/orchestrepy.tar
# activation de kubectl:
	. from /etc/kubernetes : scp admin.conf 192.168.67.3:/etc/kubernetes/admin.conf
	. enter to target node : minikube ssh -p node --node=node-m02 /etc/kubernetes
	. cp admin.conf /.kube/config
 	. sudo chown $(id -u):$(id -g) $HOME/docker/.kube/config
	. sudo chmod 666 /var/run/docker.sock

firewall-cmd --permanent --add-rich-rule='rule family="ipv4" source address="192.168.49.2" accept'



autres :
#ajout utilisateur dans chaque noeud:
sudo adduser ric
 sudo mkdir -p /home/ric/.minikube /home/ric/.kube
#ajout ric comme user dans docker:
sudo usermod -aG docker ric
